{"version":3,"sources":["components/Button/index.js","components/Table/index.js","components/App/index.js","components/Search/index.js","constants/index.js","components/Javascript/index.js","components/Python/index.js","serviceWorker.js","index.js"],"names":["Button","_ref","onClick","children","_ref$className","className","react_default","a","createElement","PropTypes","func","string","node","isRequired","defaultProps","Loading","Sort","_ref2","sortKey","onSort","activeSortKey","sortClass","push","Button_Button","join","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINT","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSortReverse","bind","assertThisInitialized","setState","_this$props","removeItem","_this$state","sortedList","reversSortedList","Button_Sort","map","item","key","objectID","href","title","author","num_comments","points","type","React","Component","arrayOf","shape","url","number","Search","input","focus","onChange","value","onSubmit","es","style","fontWeight","border","width","ref","some","DEFAULT_QUERY","PATH_BASE","App","results","searchKey","searchTerm","isLoading","searchValue","fetchTopStories","setTopStories","checkTopStoriesSearchTerm","result","hits","page","prevState","oldHits","updatedHits","concat","toConsumableArray","objectSpread","defineProperty","updateTopStories","_this2","fetch","then","response","json","catch","e","event","preventDefault","id","_results$searchKey","updatedList","filter","target","_this3","_this$state2","console","log","fluid","components_Search","components_Table","ButtonWithLoading","rest","objectWithoutProperties","Button_Loading","Javascript","Javascript_ButtonWithLoading","withLoading","Python","Python_ButtonWithLoading","Boolean","window","location","hostname","match","Informacije","ReactDOM","render","react_router_dom","basename","Header","Brand","to","Toggle","Collapse","exact","activeClassName","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba8aa515.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Button = ({ onClick, children, className = \"\" }) => (\r\n  <button className={className} onClick={onClick}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\n// eslint-disable-next-line react/no-typos\r\nButton.PropTypes = {\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nButton.defaultProps = {\r\n  className: \"\"\r\n};\r\n\r\nexport const Loading = () => (\r\n  <div>\r\n    <h2>Loading...</h2>\r\n  </div>\r\n);\r\n\r\nexport const Sort = ({\r\n  sortKey,\r\n  onSort,\r\n  children,\r\n  className,\r\n  activeSortKey\r\n}) => {\r\n  const sortClass = [\"btn btn-default\"];\r\n  if (sortKey === activeSortKey) {\r\n    sortClass.push(\"btn btn-primary\");\r\n  }\r\n  return (\r\n    <Button className={sortClass.join(\"\")} onClick={() => onSort(sortKey)}>\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { sortBy } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Sort } from \"../Button/index\";\r\n\r\nconst SORTS = {\r\n  NONE: list => list,\r\n  TITLE: list => sortBy(list, \"title\"),\r\n  AUTHOR: list => sortBy(list, \"author\"),\r\n  COMMENTS: list => sortBy(list, \"num_comments\").reverse(),\r\n  POINT: list => sortBy(list, \"points\").reverse()\r\n};\r\n\r\nclass Table extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sortKey: \"NONE\",\r\n      isSortReverse: false\r\n    };\r\n    this.onSort = this.onSort.bind(this);\r\n  }\r\n  onSort(sortKey) {\r\n    const isSortReverse =\r\n      this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse });\r\n  }\r\n  render() {\r\n    const { list, removeItem } = this.props;\r\n    const { sortKey, isSortReverse } = this.state;\r\n    const sortedList = SORTS[sortKey](list);\r\n    const reversSortedList = isSortReverse ? sortedList.reverse() : sortedList;\r\n    return (\r\n      <div className=\"col-sm-10 col-sm-offset-1\">\r\n        <div className=\"text-center\">\r\n          <p>Ponuđene opcije sortiranja</p>\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <Sort\r\n            className=\"btn btn-default btn-xs sortBtn\"\r\n            sortKey={\"NONE\"}\r\n            onSort={this.onSort}\r\n            activeSortKey={sortKey}\r\n          >\r\n            ZADANO\r\n          </Sort>\r\n          <Sort\r\n            className=\"btn btn-default btn-xs sortBtn\"\r\n            sortKey={\"TITLE\"}\r\n            onSort={this.onSort}\r\n            activeSortKey={sortKey}\r\n          >\r\n            NASLOVI\r\n          </Sort>\r\n          <Sort\r\n            className=\"btn btn-default btn-xs sortBtn\"\r\n            sortKey={\"AUTHOR\"}\r\n            onSort={this.onSort}\r\n            activeSortKey={sortKey}\r\n          >\r\n            AUTORI\r\n          </Sort>\r\n          <Sort\r\n            className=\"btn btn-default btn-xs sortBtn\"\r\n            sortKey={\"COMMENTS\"}\r\n            onSort={this.onSort}\r\n            activeSortKey={sortKey}\r\n          >\r\n            KOMENTARI\r\n          </Sort>\r\n          <Sort\r\n            className=\"btn btn-default btn-xs sortBtn\"\r\n            sortKey={\"POINT\"}\r\n            onSort={this.onSort}\r\n            activeSortKey={sortKey}\r\n          >\r\n            LAJKOVI\r\n          </Sort>\r\n          <hr />\r\n        </div>\r\n        {reversSortedList.map(item => (\r\n          <div key={item.objectID}>\r\n            <h1>\r\n              <a href=\"{ item.url }\">{item.title}</a>\r\n            </h1>\r\n            <h4>\r\n              {item.author} | {item.num_comments} Komentara | {item.points}{\" \"}\r\n              Lajkova\r\n              <Button\r\n                className=\"btn btn-danger btn-xs\"\r\n                type=\"button\"\r\n                onClick={() => removeItem(item.objectID)}\r\n              >\r\n                Ukloni\r\n              </Button>\r\n            </h4>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line react/no-typos\r\nTable.PropTypes = {\r\n  list: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      objectID: PropTypes.string.isRequired,\r\n      author: PropTypes.string,\r\n      url: PropTypes.string,\r\n      num_comments: PropTypes.number,\r\n      points: PropTypes.number\r\n    })\r\n  ).isRequired,\r\n  removeItem: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport { Grid, Row } from \"react-bootstrap\";\r\nimport Table from \"../Table/index\";\r\nimport Search from \"../Search/index\";\r\nimport { Button, Loading } from \"../Button/index\";\r\nimport {\r\n  DEFAULT_QUERY,\r\n  DEFAULT_PAGE,\r\n  DEFAULT_HPP,\r\n  PATH_BASE,\r\n  PATH_SEARCH,\r\n  PARAM_SEARCH,\r\n  PARAM_PAGE,\r\n  PARAM_HPP\r\n} from \"../../constants/index\";\r\n\r\nconst withLoading = Component => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nconst updateTopStories = (hits, page) => prevState => {\r\n  const { searchKey, results } = prevState;\r\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: { ...results, [searchKey]: { hits: updatedHits, page } },\r\n    isLoading: false\r\n  };\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: DEFAULT_QUERY,\r\n      isLoading: false\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.checkTopStoriesSearchTerm = this.checkTopStoriesSearchTerm.bind(this);\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { hits, page } = result;\r\n    this.setState(updateTopStories(hits, page));\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => this.setTopStories(result))\r\n      .catch(e => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  removeItem(id) {\r\n    const { results, searchKey } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n    const updatedList = hits.filter(item => item.objectID !== id);\r\n    this.setState({\r\n      results: { ...results, [searchKey]: { hits: updatedList, page } }\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    console.log(this);\r\n    return (\r\n      <div>\r\n        <Grid fluid>\r\n          <Row>\r\n            <div className=\"jumbotron text-center\">\r\n              <Search\r\n                onChange={this.searchValue}\r\n                value={searchTerm}\r\n                onSubmit={this.onSubmit}\r\n              >\r\n                APPs NOVOSTI\r\n              </Search>\r\n            </div>\r\n          </Row>\r\n        </Grid>\r\n\r\n        <Grid>\r\n          <Row>\r\n            <Table list={list} removeItem={this.removeItem} />\r\n\r\n            <div className=\"text-center alert\">\r\n              <ButtonWithLoading\r\n                isLoading={isLoading}\r\n                className=\"btn btn-success\"\r\n                onClick={() => this.fetchTopStories(searchTerm, page + 1)}\r\n              >\r\n                Više naslova\r\n              </ButtonWithLoading>\r\n            </div>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport { Button } from \"../Button/index\";\r\nimport { FormGroup } from \"react-bootstrap\";\r\n\r\nclass Search extends React.Component {\r\n  componentDidMount() {\r\n    this.input.focus();\r\n  }\r\n  render() {\r\n    const { onChange, value, children, onSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <FormGroup>\r\n          <h1 style={{ fontWeight: \"bold\" }}>{children}</h1>\r\n          <hr style={{ border: \"2px solid black\", width: \"300px\" }} />\r\n          <div className=\"input-group\">\r\n            <input\r\n              className=\"form-control width100 searchForm\"\r\n              type=\"text\"\r\n              onChange={onChange}\r\n              value={value}\r\n              ref={some => (this.input = some)}\r\n            />\r\n            <span className=\"input-group-btn\">\r\n              <Button className=\"btn btn-primary searchBtn\">Pretraži</Button>\r\n            </span>\r\n          </div>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","export const DEFAULT_QUERY = \"redux\";\r\nexport const DEFAULT_PAGE = 0;\r\nexport const DEFAULT_HPP = 10;\r\nexport const PATH_BASE = \"https://hn.algolia.com/api/v1\";\r\nexport const PATH_SEARCH = \"/search\";\r\nexport const PARAM_SEARCH = \"query=\";\r\nexport const PARAM_PAGE = \"page=\";\r\nexport const PARAM_HPP = \"hitsPerPage=\";","import React from \"react\";\r\nimport { Grid, Row } from \"react-bootstrap\";\r\nimport Table from \"../Table/index\";\r\nimport { Button, Loading } from \"../Button/index\";\r\nimport {\r\n  DEFAULT_PAGE,\r\n  DEFAULT_HPP,\r\n  PATH_BASE,\r\n  PATH_SEARCH,\r\n  PARAM_SEARCH,\r\n  PARAM_PAGE,\r\n  PARAM_HPP\r\n} from \"../../constants/index\";\r\n\r\nconst withLoading = Component => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nconst updateTopStories = (hits, page) => prevState => {\r\n  const { searchKey, results } = prevState;\r\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: { ...results, [searchKey]: { hits: updatedHits, page } },\r\n    isLoading: false\r\n  };\r\n};\r\n\r\nclass Javascript extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: 'javascript',\r\n      isLoading: false\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.checkTopStoriesSearchTerm = this.checkTopStoriesSearchTerm.bind(this);\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { hits, page } = result;\r\n    this.setState(updateTopStories(hits, page));\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => this.setTopStories(result))\r\n      .catch(e => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  removeItem(id) {\r\n    const { results, searchKey } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n    const updatedList = hits.filter(item => item.objectID !== id);\r\n    this.setState({\r\n      results: { ...results, [searchKey]: { hits: updatedList, page } }\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    console.log(this);\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Row>\r\n            <Table list={list} removeItem={this.removeItem} />\r\n\r\n            <div className=\"text-center alert\">\r\n              <ButtonWithLoading\r\n                isLoading={isLoading}\r\n                className=\"btn btn-success\"\r\n                onClick={() => this.fetchTopStories(searchTerm, page + 1)}\r\n              >\r\n                Više naslova\r\n              </ButtonWithLoading>\r\n            </div>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nexport default Javascript;","import React from \"react\";\r\nimport { Grid, Row } from \"react-bootstrap\";\r\nimport Table from \"../Table/index\";\r\nimport { Button, Loading } from \"../Button/index\";\r\nimport {\r\n  DEFAULT_PAGE,\r\n  DEFAULT_HPP,\r\n  PATH_BASE,\r\n  PATH_SEARCH,\r\n  PARAM_SEARCH,\r\n  PARAM_PAGE,\r\n  PARAM_HPP\r\n} from \"../../constants/index\";\r\n\r\nconst withLoading = Component => ({ isLoading, ...rest }) =>\r\n  isLoading ? <Loading /> : <Component {...rest} />;\r\n\r\nconst updateTopStories = (hits, page) => prevState => {\r\n  const { searchKey, results } = prevState;\r\n  const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\r\n  const updatedHits = [...oldHits, ...hits];\r\n  return {\r\n    results: { ...results, [searchKey]: { hits: updatedHits, page } },\r\n    isLoading: false\r\n  };\r\n};\r\n\r\nclass Python extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: \"\",\r\n      searchTerm: 'python',\r\n      isLoading: false\r\n    };\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.checkTopStoriesSearchTerm = this.checkTopStoriesSearchTerm.bind(this);\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const { hits, page } = result;\r\n    this.setState(updateTopStories(hits, page));\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({ isLoading: true });\r\n    fetch(\r\n      `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(result => this.setTopStories(result))\r\n      .catch(e => e);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ searchKey: searchTerm });\r\n    if (this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  removeItem(id) {\r\n    const { results, searchKey } = this.state;\r\n    const { hits, page } = results[searchKey];\r\n    const updatedList = hits.filter(item => item.objectID !== id);\r\n    this.setState({\r\n      results: { ...results, [searchKey]: { hits: updatedList, page } }\r\n    });\r\n  }\r\n\r\n  searchValue(event) {\r\n    this.setState({ searchTerm: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page =\r\n      (results && results[searchKey] && results[searchKey].page) || 0;\r\n    const list =\r\n      (results && results[searchKey] && results[searchKey].hits) || [];\r\n    console.log(this);\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <Row>\r\n            <Table list={list} removeItem={this.removeItem} />\r\n\r\n            <div className=\"text-center alert\">\r\n              <ButtonWithLoading\r\n                isLoading={isLoading}\r\n                className=\"btn btn-success\"\r\n                onClick={() => this.fetchTopStories(searchTerm, page + 1)}\r\n              >\r\n                Više naslova\r\n              </ButtonWithLoading>\r\n            </div>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nexport default Python;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Javascript from \"./components/Javascript/index\";\nimport Python from \"./components/Python/index\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  NavLink\n} from \"react-router-dom\";\nimport { Navbar, Nav, NavItem } from \"react-bootstrap\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst Root = () => (\n  <Router basename=\"/apps-novosti/\">\n    <div>\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand>\n            <Link to=\"/\">APPs NOVOSTI</Link>\n          </Navbar.Brand>\n          <Navbar.Toggle/>\n        </Navbar.Header>\n\n        <Navbar.Collapse>\n          <Nav>\n            <NavItem>\n              <NavLink exact to=\"/\" activeClassName=\"active\">\n                Početna\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/javascript\" activeClassName=\"active\">\n                Javascript\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/python\" activeClassName=\"active\">\n                Python\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/informacije\" activeClassName=\"active\">\n                Informacije\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Route exact path=\"/\" component={App} />\n      <Route exact path=\"/javascript\" component={Javascript} />\n      <Route exact path=\"/python\" component={Python} />\n      <Route exact path=\"/informacije\" component={Informacije} />\n    </div>\n  </Router>\n);\n\nconst Informacije = () => (\n  <div>\n    <h2>EmirFer, &copy; 2019. Sarajevo, BiH</h2>\n    <h3>Front-side React app sa lodash.js i besplatnim online Api</h3>\n  </div>\n);\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}